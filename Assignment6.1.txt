import numpy as np

def Vandermondemat(inparr):
    alen=inparr.size # To Find The Length Of Input Vector
    mat1=np.mat(inparr).reshape(alen,1) # Reshaping Input Vector into a column matrix
    i=0 # Variable to store powers
    inpchar='Y' # Variable can be modified by user to restrict the no.of columns of the matrix
    arr1=np.array([]) # Variable defining an array
    while inpchar =='Y':
        arr1=inparr**i # Calculates input array value raised to the power i
        print('The no.of columns in matrix is',(i+1),'\n') # Notification of No. of columns in current matrix
        mat1=np.append(mat1,arr1.reshape(alen,1),axis=1) # Appends the columns which are powers of input vector
        inpchar=input('To Continue Press \'Y\' or \'y\' : ') # Asks user to continue or exit
        inpchar=str.upper(inpchar) #Upper Case conversion of entered character
        i+=1
    return mat1[:,1:] # Returns a reshaped matrix excluding the 1st column.


#Calling the function ----------------------------------------------------------------------
Vandermondemat(np.array([1,2,3,4,5])) # Calling the function with sample array [1,2,3,4,5]

'''
----------------------------------------------------------------------------------------------------------------------------------------------------------------
OUTPUT
----------------------------------------------------------------------------------------------------------------------------------------------------------------

The no.of columns in matrix is 1 

To Continue Press 'Y' or 'y' : y
The no.of columns in matrix is 2 

To Continue Press 'Y' or 'y' : y
The no.of columns in matrix is 3 

To Continue Press 'Y' or 'y' : y
The no.of columns in matrix is 4 

To Continue Press 'Y' or 'y' : n

matrix([[  1,   1,   1,   1],
        [  1,   2,   4,   8],
        [  1,   3,   9,  27],
        [  1,   4,  16,  64],
        [  1,   5,  25, 125]])

'''






